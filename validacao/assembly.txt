// === INICIALIZAÇÃO ===
0: LI R1, 1        // Carrega 1 no registrador R1
1: MOV A, R1       // Move R1 para o acumulador A

// === LOOP DE INICIALIZAÇÃO ===
// loop_ini:
2: SW R1, A        // Armazena R1 no endereço A da memória
3: LI A, 1         // Carrega 1 no acumulador
4: ADD A, R1       // Incrementa: A = A + R1
5: MOV R1, A       // Atualiza R1 com novo valor
6: CMPI A, 33      // Compara A com 33
7: BCC -6          // Se A < 33, volta para endereço 2

// === CRIVO DE ERATÓSTENES ===
8: LI R6, 2        // Inicia com primeiro primo (2)
9: MOV A, R6       // Move R6 para A
10: MOV R1, A      // R1 = primo atual

// === LOOP PRINCIPAL: MARCA MÚLTIPLOS COMO NÃO-PRIMOS ===
// loop_exclui:
11: MOV A, R1      // A = múltiplo atual
12: ADD A, R6      // A = múltiplo + primo
13: MOV R1, A      // R1 = próximo múltiplo
14: LI R2, 0       // Carrega 0 em R2
15: SW R2, A       // Marca múltiplo como não-primo (armazena 0)
16: CMPI A, 33     // Verifica limite
17: BCC -6         // Volta para loop_exclui

// === BUSCA PRÓXIMO PRIMO ===
// loop_primos:
18: LI A, 1        // Carrega 1 no acumulador
19: ADD A, R6      // Incrementa R6: A = R6 + 1
20: MOV R6, A      // R6 = próximo candidato a primo
21: LW R2, A       // Carrega valor da memória endereço A para R2
22: MOV A, R2      // Move valor carregado para A
23: SUB A, R6      // Subtrai R6 de A
24: CMPI A, 0      // Compara com 0
25: BNE -8         // Se ≠ 0, volta para loop_primos
26: MOV A, R6      // Move candidato atual para A
27: MOV R1, A      // R1 = novo primo encontrado
28: CMPI A, 12     // Compara com limite 12
29: BCC -17        // Se A < 12, volta para loop_exclui

// === LOOP DE LEITURA DOS RESULTADOS ===
30: LI R1, 0       // Inicializa contador em 0
// loop_leitura:
31: LI A, 1        // Carrega 1 no acumulador
32: ADD A, R1      // Incrementa contador: A = A + R1
33: MOV R1, A      // Atualiza R1 com novo valor
34: LW R6, A       // Carrega valor da memória endereço A para R6
35: CMPI A, R1     // Compara A com R1
36: BNE -5         // Volta para loop_leitura

-- === ACESOO INVÁLIDO MEMÓRIA ===
37: NOP
38: NOP
39: LI A, 255 -- Endereço inválido para teste
40: LW R6, A  --Acesso inválido RAM (endereço 255)

-- === FIM DE PROGRAMA ===